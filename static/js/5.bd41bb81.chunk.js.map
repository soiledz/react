{"version":3,"sources":["components/hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","active","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","InputType","typeFild","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","createRef","dialogsItem","values","sendMessage","newMessageBody","compose","newTextMessage","dispatch","sendMessageCreation"],"mappings":"8NAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eAHT,GACXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAqCL,K,oBCf9EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCWlMC,EARI,SAACN,GAChB,IAAIO,EAAO,YAAcP,EAAMQ,GAE/B,OAAO,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACtC,kBAAC,IAAD,CAASX,GAAIM,GAAOP,EAAMa,QCCnBC,EANC,SAACd,GACb,OACI,yBAAKS,UAAWC,IAAEK,SAAUf,EAAMe,U,yCC8BpCC,EAAcC,YAAiB,IAkB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAACnB,GACpB,OACI,0BAAMqB,SAAUrB,EAAMsB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAWC,SAAU,WAChCC,SAAU,CAACC,IAAUZ,GACrBH,KAAM,iBACNgB,YAAa,wBAExB,6BACI,oDAQDC,EA9CC,SAAC9B,GAEb,IAAIP,EAAQO,EAAM+B,YACdC,EAAkBvC,EAAMwC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAE3B,GAAIA,GAAI2B,EAAE3B,QACpF6B,EAAmB5C,EAAM6C,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASqB,IAAKG,EAAE/B,GAAIA,GAAI+B,EAAE/B,QACrEN,IAAMsC,YAM9B,OAAKxC,EAAMN,OAGP,yBAAKe,UAAWC,IAAEuB,SACd,yBAAKxB,UAAWC,IAAE+B,aACbT,GAEL,yBAAKvB,UAAWC,IAAE4B,UACd,6BAAMD,GACN,kBAACnB,EAAD,CAAqBG,SAbb,SAACqB,GACjB1C,EAAM2C,YAAYD,EAAOE,qBAGH,kBAAC,IAAD,CAAU3C,GAAI,Y,wBCC7B4C,sBACX1C,aAfkB,SAACV,GACnB,MAAO,CACHsC,YAAatC,EAAMsC,YACnBe,eAAgBrD,EAAMsC,YAAYa,mBAGjB,SAACG,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,EAASC,YAAoBJ,SAOrChD,IAFWiD,CAGZf","file":"static/js/5.bd41bb81.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Q923\",\"dialogsItem\":\"Dialogs_dialogsItem__bJJyP\",\"active\":\"Dialogs_active__1RMJy\",\"dialog\":\"Dialogs_dialog__2PwTW\",\"messages\":\"Dialogs_messages__2pDAU\",\"message\":\"Dialogs_message__2hka_\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {InputType} from \"../Common/FormControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} id={m.id}/>);\r\n    let newMessageElement = React.createRef();\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={InputType} typeFild={\"textarea\"}\r\n                       validate={[required, maxLength50]}\r\n                       name={\"newMessageBody\"}\r\n                       placeholder={\"Enter your message\"}/>\r\n            </div>\r\n            <div>\r\n                <button>New Message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n//hoc\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"}) (AddMessageForm);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreation} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        newTextMessage: state.dialogsPage.newMessageBody,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreation(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs);"],"sourceRoot":""}